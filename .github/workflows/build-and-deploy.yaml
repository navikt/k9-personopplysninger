name: Bygg og deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENSE'
      - 'CODEOWNERS'
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      build-image: ${{ steps.generate-id.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto
          cache: gradle

      - name: KjÃ¸r tester & bygg JAR
        run: ./gradlew test shadowjar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sett IMAGE for docker & deploy
        id: generate-id
        run: echo "IMAGE=ghcr.io/${GITHUB_REPOSITORY}:$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          pull: true
          tags: ${{ steps.generate-id.outputs.IMAGE }}

  security:
    #if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tarball from docker image
        run: |
          docker pull ${{ needs.test-and-build.outputs.build-image }}
          docker save -o local-image.tar ${{ needs.test-and-build.outputs.build-image }}

      - name: Run Trivy on tarball
        uses: aquasecurity/trivy-action@master
        with:
          input: /github/workspace/local-image.tar
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SALSA_CREDENTIALS }}

      - name: Provenance, upload and sign attestation
        uses: nais/salsa@v0.7
        with:
          key: ${{ secrets.SALSA_KMS_KEY }}
          registry: ${{ secrets.GITHUB_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ needs.test-and-build.outputs.build-image }}
          image_digest: null

  deploy-to-dev-gcp:
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator.yaml
          VARS: nais/dev-gcp.json
          IMAGE: ${{ needs.test-and-build.outputs.build-image }}

  deploy-to-prod-gcp:
    if: github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'ci skip')
    runs-on: ubuntu-latest
    needs: [ test-and-build, deploy-to-dev-gcp ]
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/naiserator.yaml
          VARS: nais/prod-gcp.json
          IMAGE: ${{ needs.test-and-build.outputs.build-image }}